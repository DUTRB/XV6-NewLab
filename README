xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern RISC-V multiprocessor using ANSI C.


Lab4的内容是相对比较难的, 因为涉及到不少汇编源码和底层risc-v硬件交互的地方, 以及由C代码和汇编源码之间的来回挑战实现xv6的traps功能. 总体来说,traps是xv6通用的一个"接口", 用应对一些需要由用户态切入内核态进行一定操作并再次返回用户态的功能, 例如系统调用, 虚拟内存页缺失, 硬件信号等等. 用户态需要完全"感知"不到一个trap发生了. 所以我们需要在trap触发陷入内核态之时, 保存下来用户进程的所有状态, 在结束处理被触发的这个trap后再恢复这些状态, 包括栈, 各寄存器的值, 指令寄存器(program counter)等等.